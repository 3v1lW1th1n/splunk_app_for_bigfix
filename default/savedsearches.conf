# savedsearches.conf

# Base Search
[bigfix]
search = index=bigfix
is_visible = false

######################
# Search dashboard
######################

# Total servers
[bigfix server count]
search = savedsearch=bigfix sourcetype=clients server_version=* | dedup host, bigfix_server | stats count
dispatch.earliest_time = -7d
dispatch.latest_time = now
is_visible = false

# Total relays
[bigfix relay count]
search = savedsearch=bigfix sourcetype=clients relay_version=* | dedup host, bigfix_server | stats count
dispatch.earliest_time = -7d
dispatch.latest_time = now
is_visible = false

# Total clients
[bigfix client count]
search = savedsearch=bigfix sourcetype=clients client_version=* | dedup host, bigfix_server | stats count
dispatch.earliest_time = -90d
dispatch.latest_time = now
is_visible = false

######################
# User Overview
######################

# A pretty table of users
[user data]
search = savedsearch=bigfix sourcetype=users | dedup name, bigfix_server | eval privs=if(master_operator == "True", "master", "operator") | sort privs, name | table name, privs, action_count, bigfix_server, creation_time, last_login_time
is_visible = false

# Action distribution by user
[user actions]
search = savedsearch=bigfix sourcetype=users | dedup name, bigfix_server | top action_count by name showcount=f showperc=f
is_visible = false

# User Logins over time
[user logins]
search = savedsearch=bigfix sourcetype=users | dedup name, bigfix_server, last_login_time | timechart count by name
dispatch.earliest_time = -90d
dispatch.latest_time = now
is_visible = false


######################
# Client Overview
######################

# Table of clients that haven't been seen in > 30 days
[client orphans]
search = savedsearch=bigfix sourcetype=clients | dedup host, bigfix_server | eval old=relative_time(now(), "-30d") | where _time < old | sort _time | table host, client_id, src_ip, dns_name, user_name, os, client_version, relay_server, bigfix_server, _time 
dispatch.earliest_time = -90d
dispatch.latest_time = now
is_visible = false

# Show aggregate of client logins over time (to see stragglers)
[client logins]
search = savedsearch=bigfix sourcetype=clients | dedup host, bigfix_server | timechart count(host) by bigfix_server
dispatch.earliest_time = -90d
dispatch.latest_time = now
is_visible = false

# Client Versions
[client versions]
search = savedsearch=bigfix sourcetype=clients | dedup host, bigfix_server | chart count by client_version
dispatch.earliest_time = -90d
dispatch.latest_time = now
is_visible = false

# Relay Distance
[client relay distance]
search = savedsearch=bigfix sourcetype=clients | dedup host, bigfix_server | chart count by relay_distance
dispatch.earliest_time = -90d
dispatch.latest_time = now
is_visible = false

# Relay Selection Method
[client relay selection]
search = savedsearch=bigfix sourcetype=clients | dedup host, bigfix_server | chart count by relay_selection_method
dispatch.earliest_time = -90d
dispatch.latest_time = now
is_visible = false

# Clients per relay
[client relay distribution]
search = savedsearch=bigfix sourcetype=clients | dedup host, bigfix_server | chart count by relay_server
dispatch.earliest_time = -90d
dispatch.latest_time = now
is_visible = false

######################
# Relay Overview
######################

# Table of relays(clients that are relays) that haven't been seen in > 30 days
[relay orphans]
search = savedsearch=bigfix sourcetype=clients relay_version=* | dedup host, bigfix_server | eval old=relative_time(now(), "-30d") | where _time < old | sort _time | table host, client_id, src_ip, dns_name, user_name, os, client_version, relay_version, bigfix_server, _time 
dispatch.earliest_time = -90d
dispatch.latest_time = now
is_visible = false

# Relay versions
[relay versions]
search = savedsearch=bigfix sourcetype=clients relay_version=* | dedup host, bigfix_server | chart count by relay_version
dispatch.earliest_time = -90d
dispatch.latest_time = now
is_visible = false

# Relays per server
[relay server distribution]
search = savedsearch=bigfix sourcetype=clients relay_version=* | dedup host, bigfix_server | chart count by bigfix_server
dispatch.earliest_time = -90d
dispatch.latest_time = now
is_visible = false

# Relay free space over time
[relay free space over time]
search = savedsearch=bigfix sourcetype=infrastructure relay_free_space=* | timechart values(relay_free_space) by host
dispatch.earliest_time = -90d
dispatch.latest_time = now
is_visible = false


######################
# Infrastructure Overview
######################

# Server versions
[server versions]
search = savedsearch=bigfix sourcetype=clients server_version=* | dedup host, bigfix_server | chart count by server_version
dispatch.earliest_time = -7d
dispatch.latest_time = now
is_visible = false

# Actionsite Versions
[actionsite versions]
search = savedsearch=bigfix sourcetype=infrastructure actionsite_version=* | dedup host, bigfix_server | chart count by actionsite_version
dispatch.earliest_time = -90d
dispatch.latest_time = now
is_visible = false

# Actionsite Versions over time
[actionsite versions over time]
search = savedsearch=bigfix sourcetype=infrastructure actionsite_version=* | timechart values(actionsite_version) by host
dispatch.earliest_time = -90d
dispatch.latest_time = now
is_visible = false

# Actionsite Size over time
[actionsite size over time]
search = savedsearch=bigfix sourcetype=infrastructure actionsite_size=* | timechart values(actionsite_size) by host
dispatch.earliest_time = -90d
dispatch.latest_time = now
is_visible = false

# Filldb logfile size over time
[filldb logfile size over time]
search = savedsearch=bigfix sourcetype=infrastructure filldb_logfile_size=* | timechart values(filldb_logfile_size) by host
dispatch.earliest_time = -90d
dispatch.latest_time = now
is_visible = false

# Bufferdir File Count over time
[bufferdir file count over time]
search = savedsearch=bigfix sourcetype=infrastructure bufferdir_file_count=* | timechart values(bufferdir_file_count) by host
dispatch.earliest_time = -90d
dispatch.latest_time = now
is_visible = false

# Registration list size over time
[registration list size over time]
search = savedsearch=bigfix sourcetype=infrastructure registration_list_size=* | timechart values(registration_list_size) by host
dispatch.earliest_time = -90d
dispatch.latest_time = now
is_visible = false

# Gather status failures over time
[gather status failures over time]
search = savedsearch=bigfix sourcetype=infrastructure gather_status_failures=* | timechart values(gather_status_failures) by host
dispatch.earliest_time = -90d
dispatch.latest_time = now
is_visible = false


######################
# Compliance Overview
######################

# Overall Compliance by server
[compliance by server]
search =  savedsearch=bigfix sourcetype=summary_compliance scanned_count!=0 | dedup fixlet_id, name, site, bigfix_server | chart avg(compliance_pct) as compliance by bigfix_server
dispatch.earliest_time = -7d
dispatch.latest_time = now
is_visible = false

# Compliance by severity
[compliance by severity]
search = savedsearch=bigfix sourcetype=summary_compliance scanned_count!=0 | dedup fixlet_id, name, site, bigfix_server | eval fixlet_sev=mvfilter(eventtype LIKE "fixlet_severity_%") | search fixlet_sev=* | chart avg(compliance_pct) as compliance by fixlet_sev
dispatch.earliest_time = -7d
dispatch.latest_time = now
is_visible = false

# Average compliance over all fixlets
[compliance over time]
search = savedsearch=bigfix sourcetype=summary_compliance type=Fixlet scanned_count!=0 | timechart avg(compliance_pct) as compliance
dispatch.earliest_time = -30d
dispatch.latest_time = now
is_visible = false

# Average compliance over all fixlets by site
[compliance by site over time]
search = savedsearch=bigfix sourcetype=summary_compliance type=Fixlet scanned_count!=0 | timechart avg(compliance_pct) as compliance by site limit=300
dispatch.earliest_time = -30d
dispatch.latest_time = now
is_visible = false

# Least compliant 25 controls with high severity
[compliance critical noncomp]
search = savedsearch=bigfix eventtype=fixlet_severity_critical scanned_count!=0 | dedup fixlet_id, name, site, bigfix_server | chart sum(failed_count) as failed, avg(compliance_pct) as compliance by name | sort -failed, compliance, name limit=25
dispatch.earliest_time = -30d
dispatch.latest_time = now
is_visible = false

[noncompliance by cve]
search =  savedsearch=bigfix sourcetype=summary_compliance scanned_count!=0 cve=cve-*-* | dedup fixlet_id, name, site, bigfix_server | search compliance_pct<100 | chart eval(100 - avg(compliance_pct)) as non_compliance by cve
dispatch.earliest_time = -7d
dispatch.latest_time = now
is_visible = false

[noncompliance by cce]
search =  savedsearch=bigfix sourcetype=summary_compliance scanned_count!=0 cce=cce-*-* | dedup fixlet_id, name, site, bigfix_server | search compliance_pct<100 | chart eval(100 - avg(compliance_pct)) as non_compliance by cce
dispatch.earliest_time = -7d
dispatch.latest_time = now
is_visible = false


######################
# Real-time Syslog Feed
######################

# Simple real-time graph of syslog feed
# I'm pretty sure this is ok to specify with the syslog sourcetype, but verify
[realtime compliance events]
search = savedsearch=bigfix sourcetype=syslog | timechart count(eval(relevant == 0)) as "Compliant", count(eval(relevant == 1)) as "Non-Compliant"
dispatch.earliest_time = rt
dispatch.latest_time = rt
is_visible = false


######################
# Action Overview
######################

# Users making the largest number of changes in the environment
[action results by user]
search = savedsearch=bigfix sourcetype=actions | dedup action_id, host, bigfix_server | chart count by issuer
dispatch.earliest_time = -30d
dispatch.latest_time = now
is_visible = false

# OSs with the largest number of changes in the environment
[action results by os]
search = savedsearch=bigfix sourcetype=actions | dedup action_id, host, bigfix_server | chart count by os
dispatch.earliest_time = -30d
dispatch.latest_time = now
is_visible = false

# Status breakout
[action results by status]
search = savedsearch=bigfix sourcetype=actions | dedup action_id, host, bigfix_server | chart count by status
dispatch.earliest_time = -30d
dispatch.latest_time = now
is_visible = false

# Open Actions
[action open]
search = savedsearch=bigfix sourcetype=actions NOT stopper=* NOT time_stopped=* | dedup action_id, host, bigfix_server | convert timeformat="%a, %d %b %Y %H:%M:%S" mktime(start_time) as start mktime(end_time) as end | eval is_active=if(start <= now(), if(end > now(), "True", "False"), if(isnull(end_time), "True", "False")) | search is_active=True | top action_name by issuer showperc=f
dispatch.earliest_time = -30d
dispatch.latest_time = now
is_visible = false

# Completed Actions
[action complete]
search = savedsearch=bigfix sourcetype=actions (end_time=* OR time_stopped=*) | dedup action_id, host, bigfix_server | convert timeformat="%a, %d %b %Y %H:%M:%S" mktime(start_time) as start mktime(end_time) as end | convert timeformat="%a, %d %b %Y %H:%M:%S %z" mktime(time_stopped) as stop | eval ended=if(end > relative_time(now(), "-7d"), "Ended", if(stop > relative_time(now(), "-7d"), "Stopped", "None")) | search ended!=None | top action_name by ended showperc=f
dispatch.earliest_time = -30d
dispatch.latest_time = now
is_visible = false

######################
# Hardware Inventory
######################

# Top 100 Computer types for Windows
[hwinv computer type]
search =  savedsearch=bigfix sourcetype=hardware_inventory property_name="Computer Manufacturer - Windows" | dedup host, bigfix_server | rename property_values as computer_manufacturer | join type=outer host [search savedsearch=bigfix sourcetype=hardware_inventory property_name="Computer Model - Windows" | rename property_values as computer_model] | strcat computer_manufacturer " " computer_model computer_type | top computer_type limit=100 showperc=f
dispatch.earliest_time = -90d
dispatch.latest_time = now
is_visible = false

# Top 10 CPU Brands
[hwinv cpu brand]
search = savedsearch=bigfix sourcetype=hardware_inventory property_name="Brand String of CPU*" | dedup host, bigfix_server | rename property_values as cpu_brand | top cpu_brand limit=10
dispatch.earliest_time = -90d
dispatch.latest_time = now
is_visible = false

# CPU counts
[hwinv cpu count]
search = savedsearch=bigfix sourcetype=hardware_inventory property_name="Number of Processors*" | dedup host, bigfix_server | rename property_values as cpu_count | top cpu_count limit=100
dispatch.earliest_time = -90d
dispatch.latest_time = now
is_visible = false

# Top 10 drive types
[hwinv drive type]
search = savedsearch=bigfix sourcetype=hardware_inventory property_name="Disk Drives - Windows" | dedup host, bigfix_server | rename property_values as drive_type | top drive_type limit=10
dispatch.earliest_time = -90d
dispatch.latest_time = now
is_visible = false

# Count of fixed drives
[hwinv drive count]
search = savedsearch=bigfix sourcetype=hardware_inventory property_name="Number of Fixed Drives - Windows" | dedup host, bigfix_server | rename property_values as drive_count | top drive_count limit=100
dispatch.earliest_time = -90d
dispatch.latest_time = now
is_visible = false

######################
# Software Inventory
######################

# Relay Selection Method
[swinv os version]
search = savedsearch=bigfix sourcetype=clients | dedup host, bigfix_server | top os limit=0 showperc=f
dispatch.earliest_time = -90d
dispatch.latest_time = now
is_visible = false

# Count of unique windows services
[swinv svc count]
search =  savedsearch=bigfix sourcetype=software_inventory property_name="Services - Windows" | dedup host, bigfix_server | makemv delim="," property_values | eval s=split(property_values, " | ") | eval svcs=mvfilter(s != "Running" AND s != "Stopped") | stats dc(svcs)
dispatch.earliest_time = -90d
dispatch.latest_time = now
is_visible = false

# Count of unique windows apps
[swinv app count]
search = savedsearch=bigfix sourcetype=software_inventory property_name="Installed Applications - Windows" NOT "--||" | dedup host, bigfix_server | makemv delim="," property_values | stats dc(property_values)
dispatch.earliest_time = -90d
dispatch.latest_time = now
is_visible = false

# Top 10 running services
[swinv top running services]
search =  savedsearch=bigfix sourcetype=software_inventory property_name="Services - Windows" | dedup host, bigfix_server | makemv delim="," property_values | eval svcs=mvfilter(property_values LIKE "%Running") | eval s=split(svcs, " | ") | eval running_services=mvfilter(s != "Running") | top running_services limit=10 showperc=f
dispatch.earliest_time = -90d
dispatch.latest_time = now
is_visible = false

# Rare 10 running services
[swinv rare running services]
search =  savedsearch=bigfix sourcetype=software_inventory property_name="Services - Windows" | dedup host, bigfix_server | makemv delim="," property_values | eval svcs=mvfilter(property_values LIKE "%Running") | eval s=split(svcs, " | ") | eval running_services=mvfilter(s != "Running") | rare running_services limit=10 showperc=f
dispatch.earliest_time = -90d
dispatch.latest_time = now
is_visible = false

# Top 10 apps
[swinv top installed applications]
search = savedsearch=bigfix sourcetype=software_inventory property_name="Installed Applications - Windows" NOT "--||" | dedup host, bigfix_server | makemv delim="," property_values | rename property_values as installed_applications | top installed_applications limit=10 showperc=f
dispatch.earliest_time = -90d
dispatch.latest_time = now
is_visible = false

# Rare 10 apps
[swinv rare installed applications]
search = savedsearch=bigfix sourcetype=software_inventory property_name="Installed Applications - Windows" NOT "--||" | dedup host, bigfix_server | makemv delim="," property_values | rename property_values as installed_applications | rare installed_applications limit=10 showperc=f
dispatch.earliest_time = -90d
dispatch.latest_time = now
is_visible = false

######################
# Random Searches
######################

# Including client data into fixlet results (dedup this on fixlets
[fixlet results with groups]
search = savedsearch=bigfix sourcetype=fixlet_results | join type=outer overwrite=false host [search savedsearch=bigfix sourcetype=clients]
dispatch.earliest_time = -24h
dispatch.latest_time = now

# Get transactions of fixlets that have changed relevance state
[fixlet transactions]
search = savedsearch=bigfix sourcetype=fixlet_results | dedup host, fixlet_id, fixlet_name, client_id, relevant, first_relevant_time, last_relevant_time, last_nonrelevant_time, bigfix_server | transaction host, fixlet_id, fixlet_name | where duration > 0 | eval status=if(mvindex(relevant, 0) == "False", "Fixed", "Not Fixed")
dispatch.earliest_time = -24h
dispatch.latest_time = now
